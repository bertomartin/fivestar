<?php
// $Id$

// Get the current schema so that updates that have already run for 5 don't get
// run a second time when upgrading to 6.
define('FIVESTAR_VERSION', db_result(db_query("SELECT schema_version FROM {system} WHERE type = 'module' AND name = 'fivestar'")));

function fivestar_schema() {
  return array();
}

function fivestar_install() {
  drupal_install_schema('fivestar');
  if (module_exists('content')) {
    content_notify('install', 'fivestar');
  }
}

function fivestar_uninstall() {
  drupal_uninstall_schema('fivestar');
  db_query("DELETE FROM {variable} WHERE name LIKE 'fivestar_%'");
  if (module_exists('content')) {
    content_notify('uninstall', 'fivestar');
  }
}

/**
* Implementation of hook_enable().
*/
function fivestar_enable() {
  if (module_exists('content')) {
    content_notify('enable', 'fivestar');
  }
}

/**
* Implementation of hook_disable().
*/
function fivestar_disable() {
  if (module_exists('content')) {
    content_notify('disable', 'fivestar');
  }
}

/**
 * Add the fivestar comment tables.
 */
function fivestar_update_1() {
  // No longer needed. The tables are added by fivestar_commment_install().
  return array();
}

/**
 * Convert previous fivestar widget settings to new format.
 */
function fivestar_update_2() {
  $types = node_get_types('names');
  foreach ($types as $key => $name) {
    $style = variable_get('fivestar_style_'. $key, 'default');
    $enabled = variable_get('fivestar_'. $key, FALSE);
    // Split the display style into two variables for stars and text.
    if ($enabled) {
      switch ($style) {
        case 'default':
          variable_set('fivestar_style_'. $key, 'user');
          variable_set('fivestar_text_'. $key, 'average');
          break;
        case 'compact':
          variable_set('fivestar_style_'. $key, 'user');
          variable_set('fivestar_text_'. $key, 'none');
          break;
        case 'dual':
          variable_set('fivestar_text_'. $key, 'none');
          break;
      }
    }
    // We no longer save any settings if Fivestar is disabled.
    else {
      variable_del('fivestar_unvote_'. $key);
      variable_del('fivestar_style_'. $key);
      variable_del('fivestar_position_'. $key);
      variable_del('fivestar_position_teaser_'. $key);
    }
  }
  return array();
}

/**
 * Upgrade to Drupal 6 and VotingAPI 2.
 * 
 * Remove anonymous vote interval from Fivestar, now handled by VotingAPI.
 */
function fivestar_update_6100() {
  $ret = array();
  variable_del('fivestar_anonymous_vote_interval');
  $ret[] = array('success' => TRUE, 'query' => "variable_del('fivestar_anonymous_vote_interval')");
  return $ret;
}

/**
 * Add vote_id column to the fivestar_comment table.
 */
function fivestar_update_6101() {
  // Moved to fivestar_commment_update_6100().
  return array();
}

/**
 * Set Fivestar weight to -1 so that it can load before content.module.
 */
function fivestar_update_6102() {
  $ret = array();

  // This update will already be run as fivestar_update_5701 on Drupal 5.
  if (FIVESTAR_VERSION >= 6100) {
    $ret[] = update_sql("UPDATE {system} SET weight = -1 WHERE type = 'module' AND name = 'fivestar'");
  }
  return $ret;
}

/**
 * Move comment support to a separate module.
 */
function fivestar_update_6103() {
  // Comment support was added in schema version 1.
  if (FIVESTAR_VERSION >= 6100) {
    // Enable the module, but don't run the install hook (tables already exist).
    if (module_exists('comment')) {
      module_rebuild_cache();
      module_enable(array('fivestar_comment'));
      $version = array_pop(drupal_get_schema_versions('fivestar_comment'));
      drupal_set_installed_schema_version('fivestar_comment', $version);
      module_rebuild_cache();
    }
    // If the comment table needs an update, run fivestar_comment_update_5100().
    if (FIVESTAR_VERSION < 6101) {
      module_load_install('fivestar_comment');
      fivestar_comment_update_6100();
    }
  }
  return array();
}